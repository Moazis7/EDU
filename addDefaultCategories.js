const mongoose = require('mongoose');
const Category = require('./models/Category');
require('dotenv').config({ path: './config.env' });

// Default subjects for each level
const defaultSubjects = {
  prep1: [
    'ุงููุบุฉ ุงูุนุฑุจูุฉ',
    'ุงููุบุฉ ุงูุฅูุฌููุฒูุฉ',
    'ุงูุฑูุงุถูุงุช',
    'ุงูุนููู',
    'ุงูุฏุฑุงุณุงุช ุงูุงุฌุชูุงุนูุฉ',
    'ุงูุชุฑุจูุฉ ุงูุฏูููุฉ',
    'ุงูุชุฑุจูุฉ ุงููููุฉ',
    'ุงูุชุฑุจูุฉ ุงูุฑูุงุถูุฉ',
    'ุงูุญุงุณุจ ุงูุขูู'
  ],
  prep2: [
    'ุงููุบุฉ ุงูุนุฑุจูุฉ',
    'ุงููุบุฉ ุงูุฅูุฌููุฒูุฉ',
    'ุงูุฑูุงุถูุงุช',
    'ุงูุนููู',
    'ุงูุฏุฑุงุณุงุช ุงูุงุฌุชูุงุนูุฉ',
    'ุงูุชุฑุจูุฉ ุงูุฏูููุฉ',
    'ุงูุชุฑุจูุฉ ุงููููุฉ',
    'ุงูุชุฑุจูุฉ ุงูุฑูุงุถูุฉ',
    'ุงูุญุงุณุจ ุงูุขูู'
  ],
  prep3: [
    'ุงููุบุฉ ุงูุนุฑุจูุฉ',
    'ุงููุบุฉ ุงูุฅูุฌููุฒูุฉ',
    'ุงูุฑูุงุถูุงุช',
    'ุงูุนููู',
    'ุงูุฏุฑุงุณุงุช ุงูุงุฌุชูุงุนูุฉ',
    'ุงูุชุฑุจูุฉ ุงูุฏูููุฉ',
    'ุงูุชุฑุจูุฉ ุงููููุฉ',
    'ุงูุชุฑุจูุฉ ุงูุฑูุงุถูุฉ',
    'ุงูุญุงุณุจ ุงูุขูู'
  ],
  sec1: [
    'ุงููุบุฉ ุงูุนุฑุจูุฉ',
    'ุงููุบุฉ ุงูุฅูุฌููุฒูุฉ',
    'ุงูุฑูุงุถูุงุช',
    'ุงูููุฒูุงุก',
    'ุงูููููุงุก',
    'ุงูุฃุญูุงุก',
    'ุงูุชุงุฑูุฎ',
    'ุงูุฌุบุฑุงููุง',
    'ุงูุชุฑุจูุฉ ุงูุฏูููุฉ',
    'ุงูุชุฑุจูุฉ ุงููููุฉ',
    'ุงูุชุฑุจูุฉ ุงูุฑูุงุถูุฉ',
    'ุงูุญุงุณุจ ุงูุขูู'
  ],
  sec2: [
    'ุงููุบุฉ ุงูุนุฑุจูุฉ',
    'ุงููุบุฉ ุงูุฅูุฌููุฒูุฉ',
    'ุงูุฑูุงุถูุงุช',
    'ุงูููุฒูุงุก',
    'ุงูููููุงุก',
    'ุงูุฃุญูุงุก',
    'ุงูุชุงุฑูุฎ',
    'ุงูุฌุบุฑุงููุง',
    'ุงูุชุฑุจูุฉ ุงูุฏูููุฉ',
    'ุงูุชุฑุจูุฉ ุงููููุฉ',
    'ุงูุชุฑุจูุฉ ุงูุฑูุงุถูุฉ',
    'ุงูุญุงุณุจ ุงูุขูู'
  ],
  sec3: [
    'ุงููุบุฉ ุงูุนุฑุจูุฉ',
    'ุงููุบุฉ ุงูุฅูุฌููุฒูุฉ',
    'ุงูุฑูุงุถูุงุช',
    'ุงูููุฒูุงุก',
    'ุงูููููุงุก',
    'ุงูุฃุญูุงุก',
    'ุงูุชุงุฑูุฎ',
    'ุงูุฌุบุฑุงููุง',
    'ุงูุชุฑุจูุฉ ุงูุฏูููุฉ',
    'ุงูุชุฑุจูุฉ ุงููููุฉ',
    'ุงูุชุฑุจูุฉ ุงูุฑูุงุถูุฉ',
    'ุงูุญุงุณุจ ุงูุขูู'
  ]
};

async function addDefaultCategories() {
  try {
    // Connect to MongoDB
    await mongoose.connect(process.env.MONGODB_URI);
    console.log('โ Connected to MongoDB');

    // Clear existing categories
    await Category.deleteMany({});
    console.log('๐๏ธ Cleared existing categories');

    const categoriesToAdd = [];

    // Add categories for each level
    for (const [level, subjects] of Object.entries(defaultSubjects)) {
      for (const subject of subjects) {
        categoriesToAdd.push({
          name: subject,
          description: `ูุงุฏุฉ ${subject} ูููุฑุญูุฉ ${level}`,
          level: level
        });
      }
    }

    // Insert all categories
    const result = await Category.insertMany(categoriesToAdd);
    console.log(`โ Added ${result.length} categories successfully`);

    // Display summary
    console.log('\n๐ Categories Summary:');
    for (const [level, subjects] of Object.entries(defaultSubjects)) {
      console.log(`${level}: ${subjects.length} subjects`);
    }

    console.log('\n๐ Default categories added successfully!');
    process.exit(0);
  } catch (error) {
    console.error('โ Error adding default categories:', error);
    process.exit(1);
  }
}

// Run the script
addDefaultCategories(); 